// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleIAM.PasswordlessLogin.Entities;

namespace SimpleIAM.PasswordlessLogin.SqlServer.Migrations
{
    [DbContext(typeof(PasswordlessLoginDbContext))]
    partial class PasswordlessLoginDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("auth")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.AuthorizedDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("Description");

                    b.Property<string>("DeviceIdHash")
                        .IsRequired();

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("AuthorizedDevices");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.EventLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasMaxLength(255);

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("Time");

                    b.Property<string>("Username")
                        .HasMaxLength(254);

                    b.HasKey("Id");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.OneTimeCode", b =>
                {
                    b.Property<string>("SentTo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(254);

                    b.Property<string>("ClientNonceHash");

                    b.Property<DateTime>("ExpiresUTC");

                    b.Property<int>("FailedAttemptCount");

                    b.Property<string>("LongCode");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(2048);

                    b.Property<int>("SentCount");

                    b.Property<string>("ShortCode");

                    b.HasKey("SentTo");

                    b.ToTable("OneTimeCodes");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.PasswordHash", b =>
                {
                    b.Property<string>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<int>("FailedAttemptCount");

                    b.Property<string>("Hash")
                        .IsRequired();

                    b.Property<DateTime>("LastChangedUTC");

                    b.Property<DateTime?>("TempLockUntilUTC");

                    b.HasKey("SubjectId");

                    b.ToTable("PasswordHashes");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.User", b =>
                {
                    b.Property<string>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedUTC");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254);

                    b.HasKey("SubjectId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(36);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("Type");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.UserClaim", b =>
                {
                    b.HasOne("SimpleIAM.PasswordlessLogin.Entities.User")
                        .WithMany("Claims")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
