// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleIAM.PasswordlessLogin.Entities;

namespace SimpleIAM.PasswordlessLogin.MySql.Migrations
{
    [DbContext(typeof(PasswordlessLoginDbContext))]
    [Migration("20200128051726_v0.6.0")]
    partial class v060
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.EventLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(254) CHARACTER SET utf8mb4")
                        .HasMaxLength(254);

                    b.HasKey("Id");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.OneTimeCode", b =>
                {
                    b.Property<string>("SentTo")
                        .HasColumnType("varchar(254) CHARACTER SET utf8mb4")
                        .HasMaxLength(254);

                    b.Property<string>("ClientNonceHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiresUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FailedAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("LongCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(2048);

                    b.Property<int>("SentCount")
                        .HasColumnType("int");

                    b.Property<string>("ShortCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SentTo");

                    b.ToTable("OneTimeCodes");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.PasswordHash", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.Property<int>("FailedAttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LastChangedUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TempLockUntilUTC")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SubjectId");

                    b.ToTable("PasswordHashes");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.TrustedBrowser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("BrowserIdHash")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("TrustedBrowsers");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.User", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(254) CHARACTER SET utf8mb4")
                        .HasMaxLength(254);

                    b.HasKey("SubjectId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("Type");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("SimpleIAM.PasswordlessLogin.Entities.UserClaim", b =>
                {
                    b.HasOne("SimpleIAM.PasswordlessLogin.Entities.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
